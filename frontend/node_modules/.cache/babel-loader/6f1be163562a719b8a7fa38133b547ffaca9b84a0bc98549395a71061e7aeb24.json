{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useCallback } from 'react';\nfunction useHover() {\n  const [hovered, setHovered] = useState(false);\n  const previousNode = useRef(null);\n  const handleMouseEnter = useCallback(() => {\n    setHovered(true);\n  }, []);\n  const handleMouseLeave = useCallback(() => {\n    setHovered(false);\n  }, []);\n  const ref = useCallback(node => {\n    if (previousNode.current) {\n      previousNode.current.removeEventListener(\"mouseenter\", handleMouseEnter);\n      previousNode.current.removeEventListener(\"mouseleave\", handleMouseLeave);\n    }\n    if (node) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n    previousNode.current = node;\n  }, [handleMouseEnter, handleMouseLeave]);\n  return {\n    ref,\n    hovered\n  };\n}\nexport { useHover };","map":{"version":3,"names":["useHover","hovered","setHovered","useState","previousNode","useRef","handleMouseEnter","useCallback","handleMouseLeave","ref","node","current","removeEventListener","addEventListener"],"sources":["C:\\IVOSIS\\IvosisProjectManagement\\frontend\\node_modules\\@mantine\\hooks\\src\\use-hover\\use-hover.ts"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nexport interface UseHoverReturnValue<T extends HTMLElement = any> {\n  hovered: boolean;\n  ref: React.RefCallback<T | null>;\n}\n\nexport function useHover<T extends HTMLElement = any>(): UseHoverReturnValue<T> {\n  const [hovered, setHovered] = useState(false);\n  const previousNode = useRef<HTMLElement>(null);\n\n  const handleMouseEnter = useCallback(() => {\n    setHovered(true);\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    setHovered(false);\n  }, []);\n\n  const ref: React.RefCallback<T | null> = useCallback(\n    (node) => {\n      if (previousNode.current) {\n        previousNode.current.removeEventListener('mouseenter', handleMouseEnter);\n        previousNode.current.removeEventListener('mouseleave', handleMouseLeave);\n      }\n\n      if (node) {\n        node.addEventListener('mouseenter', handleMouseEnter);\n        node.addEventListener('mouseleave', handleMouseLeave);\n      }\n\n      previousNode.current = node;\n    },\n    [handleMouseEnter, handleMouseLeave]\n  );\n\n  return { ref, hovered };\n}\n"],"mappings":";;;AAOO,SAASA,QAAgEA,CAAA;EAC9E,MAAM,CAACC,OAAA,EAASC,UAAU,IAAIC,QAAA,CAAS,KAAK;EACtC,MAAAC,YAAA,GAAeC,MAAA,CAAoB,IAAI;EAEvC,MAAAC,gBAAA,GAAmBC,WAAA,CAAY,MAAM;IACzCL,UAAA,CAAW,IAAI;EACjB,GAAG,EAAE;EAEC,MAAAM,gBAAA,GAAmBD,WAAA,CAAY,MAAM;IACzCL,UAAA,CAAW,KAAK;EAClB,GAAG,EAAE;EAEL,MAAMO,GAAmC,GAAAF,WAAA,CACtCG,IAAS;IACR,IAAIN,YAAA,CAAaO,OAAS;MACXP,YAAA,CAAAO,OAAA,CAAQC,mBAAoB,eAAcN,gBAAgB;MAC1DF,YAAA,CAAAO,OAAA,CAAQC,mBAAoB,eAAcJ,gBAAgB;IAAA;IAGzE,IAAIE,IAAM;MACHA,IAAA,CAAAG,gBAAA,CAAiB,cAAcP,gBAAgB;MAC/CI,IAAA,CAAAG,gBAAA,CAAiB,cAAcL,gBAAgB;IAAA;IAGtDJ,YAAA,CAAaO,OAAU,GAAAD,IAAA;EACzB,GACA,CAACJ,gBAAA,EAAkBE,gBAAgB,CACrC;EAEO;IAAEC,GAAA;IAAKR;EAAQ;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}