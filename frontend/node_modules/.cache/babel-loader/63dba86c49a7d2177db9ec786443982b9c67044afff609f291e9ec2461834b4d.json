{"ast":null,"code":"'use client';\n\nimport { useState, useCallback } from 'react';\nfunction useDisclosure(initialState = false, options = {}) {\n  const [opened, setOpened] = useState(initialState);\n  const open = useCallback(() => {\n    setOpened(isOpened => {\n      if (!isOpened) {\n        options.onOpen?.();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [options.onOpen]);\n  const close = useCallback(() => {\n    setOpened(isOpened => {\n      if (isOpened) {\n        options.onClose?.();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [options.onClose]);\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n  return [opened, {\n    open,\n    close,\n    toggle\n  }];\n}\nexport { useDisclosure };","map":{"version":3,"names":["useDisclosure","initialState","options","opened","setOpened","useState","open","useCallback","isOpened","onOpen","close","onClose","toggle"],"sources":["C:\\Users\\Asus\\Desktop\\Ivosis\\IvosisProjectManagement\\frontend\\node_modules\\@mantine\\hooks\\src\\use-disclosure\\use-disclosure.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nexport interface UseDisclosureOptions {\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport interface UseDisclosureHandlers {\n  open: () => void;\n  close: () => void;\n  toggle: () => void;\n}\n\nexport type UseDisclosureReturnValue = [boolean, UseDisclosureHandlers];\n\nexport function useDisclosure(\n  initialState = false,\n  options: UseDisclosureOptions = {}\n): UseDisclosureReturnValue {\n  const [opened, setOpened] = useState(initialState);\n\n  const open = useCallback(() => {\n    setOpened((isOpened) => {\n      if (!isOpened) {\n        options.onOpen?.();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [options.onOpen]);\n\n  const close = useCallback(() => {\n    setOpened((isOpened) => {\n      if (isOpened) {\n        options.onClose?.();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [options.onClose]);\n\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n\n  return [opened, { open, close, toggle }];\n}\n"],"mappings":";;;AAeO,SAASA,aACdA,CAAAC,YAAA,GAAe,KACf,EAAAC,OAAA,GAAgC,EACN;EAC1B,MAAM,CAACC,MAAA,EAAQC,SAAS,IAAIC,QAAA,CAASJ,YAAY;EAE3C,MAAAK,IAAA,GAAOC,WAAA,CAAY,MAAM;IAC7BH,SAAA,CAAWI,QAAa;MACtB,IAAI,CAACA,QAAU;QACbN,OAAA,CAAQO,MAAS;QACV;MAAA;MAEF,OAAAD,QAAA;IAAA,CACR;EAAA,CACA,GAACN,OAAQ,CAAAO,MAAM,CAAC;EAEb,MAAAC,KAAA,GAAQH,WAAA,CAAY,MAAM;IAC9BH,SAAA,CAAWI,QAAa;MACtB,IAAIA,QAAU;QACZN,OAAA,CAAQS,OAAU;QACX;MAAA;MAEF,OAAAH,QAAA;IAAA,CACR;EAAA,CACA,GAACN,OAAQ,CAAAS,OAAO,CAAC;EAEd,MAAAC,MAAA,GAASL,WAAA,CAAY,MAAM;IACtBJ,MAAA,GAAAO,KAAA,KAAUJ,IAAK;EACvB,IAACI,KAAO,EAAAJ,IAAA,EAAMH,MAAM,CAAC;EAExB,OAAO,CAACA,MAAQ;IAAEG,IAAM;IAAAI,KAAA;IAAOE;EAAA,CAAQ;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}