{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getFontSize, getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../Popover/Popover.mjs';\nimport '../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { ComboboxProvider } from './Combobox.context.mjs';\nimport { ComboboxChevron } from './ComboboxChevron/ComboboxChevron.mjs';\nimport { ComboboxClearButton } from './ComboboxClearButton/ComboboxClearButton.mjs';\nimport { ComboboxDropdown } from './ComboboxDropdown/ComboboxDropdown.mjs';\nimport { ComboboxDropdownTarget } from './ComboboxDropdownTarget/ComboboxDropdownTarget.mjs';\nimport { ComboboxEmpty } from './ComboboxEmpty/ComboboxEmpty.mjs';\nimport { ComboboxEventsTarget } from './ComboboxEventsTarget/ComboboxEventsTarget.mjs';\nimport { ComboboxFooter } from './ComboboxFooter/ComboboxFooter.mjs';\nimport { ComboboxGroup } from './ComboboxGroup/ComboboxGroup.mjs';\nimport { ComboboxHeader } from './ComboboxHeader/ComboboxHeader.mjs';\nimport { ComboboxHiddenInput } from './ComboboxHiddenInput/ComboboxHiddenInput.mjs';\nimport { ComboboxOption } from './ComboboxOption/ComboboxOption.mjs';\nimport { ComboboxOptions } from './ComboboxOptions/ComboboxOptions.mjs';\nimport { ComboboxSearch } from './ComboboxSearch/ComboboxSearch.mjs';\nimport { ComboboxTarget } from './ComboboxTarget/ComboboxTarget.mjs';\nimport { useCombobox } from './use-combobox/use-combobox.mjs';\nimport classes from './Combobox.module.css.mjs';\nconst defaultProps = {\n  keepMounted: true,\n  withinPortal: true,\n  resetSelectionOnOptionHover: false,\n  width: \"target\",\n  transitionProps: {\n    transition: \"fade\",\n    duration: 0\n  },\n  size: \"sm\"\n};\nconst varsResolver = createVarsResolver((_, {\n  size,\n  dropdownPadding\n}) => ({\n  options: {\n    \"--combobox-option-fz\": getFontSize(size),\n    \"--combobox-option-padding\": getSize(size, \"combobox-option-padding\")\n  },\n  dropdown: {\n    \"--combobox-padding\": dropdownPadding === void 0 ? void 0 : rem(dropdownPadding),\n    \"--combobox-option-fz\": getFontSize(size),\n    \"--combobox-option-padding\": getSize(size, \"combobox-option-padding\")\n  }\n}));\nfunction Combobox(_props) {\n  const props = useProps(\"Combobox\", defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    children,\n    store: controlledStore,\n    vars,\n    onOptionSubmit,\n    onClose,\n    size,\n    dropdownPadding,\n    resetSelectionOnOptionHover,\n    __staticSelector,\n    readOnly,\n    ...others\n  } = props;\n  const uncontrolledStore = useCombobox();\n  const store = controlledStore || uncontrolledStore;\n  const getStyles = useStyles({\n    name: __staticSelector || \"Combobox\",\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const onDropdownClose = () => {\n    onClose?.();\n    store.closeDropdown();\n  };\n  return /* @__PURE__ */jsx(ComboboxProvider, {\n    value: {\n      getStyles,\n      store,\n      onOptionSubmit,\n      size,\n      resetSelectionOnOptionHover,\n      readOnly\n    },\n    children: /* @__PURE__ */jsx(Popover, {\n      opened: store.dropdownOpened,\n      preventPositionChangeWhenVisible: true,\n      ...others,\n      onChange: _opened => !_opened && onDropdownClose(),\n      withRoles: false,\n      unstyled,\n      children\n    })\n  });\n}\nconst extendCombobox = c => c;\nCombobox.extend = extendCombobox;\nCombobox.classes = classes;\nCombobox.displayName = \"@mantine/core/Combobox\";\nCombobox.Target = ComboboxTarget;\nCombobox.Dropdown = ComboboxDropdown;\nCombobox.Options = ComboboxOptions;\nCombobox.Option = ComboboxOption;\nCombobox.Search = ComboboxSearch;\nCombobox.Empty = ComboboxEmpty;\nCombobox.Chevron = ComboboxChevron;\nCombobox.Footer = ComboboxFooter;\nCombobox.Header = ComboboxHeader;\nCombobox.EventsTarget = ComboboxEventsTarget;\nCombobox.DropdownTarget = ComboboxDropdownTarget;\nCombobox.Group = ComboboxGroup;\nCombobox.ClearButton = ComboboxClearButton;\nCombobox.HiddenInput = ComboboxHiddenInput;\nexport { Combobox };","map":{"version":3,"names":["defaultProps","keepMounted","withinPortal","resetSelectionOnOptionHover","width","transitionProps","transition","duration","size","varsResolver","createVarsResolver","_","dropdownPadding","options","getFontSize","getSize","dropdown","rem","Combobox","_props","props","useProps","classNames","styles","unstyled","children","store","controlledStore","vars","onOptionSubmit","onClose","__staticSelector","readOnly","others","uncontrolledStore","useCombobox","getStyles","useStyles","name","classes","onDropdownClose","closeDropdown","jsx","ComboboxProvider","value","Popover","opened","dropdownOpened","preventPositionChangeWhenVisible","onChange","_opened","withRoles","extendCombobox","c","extend","displayName","Target","ComboboxTarget","Dropdown","ComboboxDropdown","Options","ComboboxOptions","Option","ComboboxOption","Search","ComboboxSearch","Empty","ComboboxEmpty","Chevron","ComboboxChevron","Footer","ComboboxFooter","Header","ComboboxHeader","EventsTarget","ComboboxEventsTarget","DropdownTarget","ComboboxDropdownTarget","Group","ComboboxGroup","ClearButton","ComboboxClearButton","HiddenInput","ComboboxHiddenInput"],"sources":["C:\\IVOSIS\\IvosisProjectManagement\\frontend\\node_modules\\@mantine\\core\\src\\components\\Combobox\\Combobox.tsx"],"sourcesContent":["import {\n  createVarsResolver,\n  ExtendComponent,\n  Factory,\n  getFontSize,\n  getSize,\n  MantineSize,\n  MantineThemeComponent,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { __PopoverProps, Popover } from '../Popover';\nimport { ComboboxProvider } from './Combobox.context';\nimport { ComboboxChevron } from './ComboboxChevron/ComboboxChevron';\nimport { ComboboxClearButton } from './ComboboxClearButton/ComboboxClearButton';\nimport { ComboboxDropdown } from './ComboboxDropdown/ComboboxDropdown';\nimport { ComboboxDropdownTarget } from './ComboboxDropdownTarget/ComboboxDropdownTarget';\nimport { ComboboxEmpty } from './ComboboxEmpty/ComboboxEmpty';\nimport { ComboboxEventsTarget } from './ComboboxEventsTarget/ComboboxEventsTarget';\nimport { ComboboxFooter } from './ComboboxFooter/ComboboxFooter';\nimport { ComboboxGroup } from './ComboboxGroup/ComboboxGroup';\nimport { ComboboxHeader } from './ComboboxHeader/ComboboxHeader';\nimport { ComboboxHiddenInput } from './ComboboxHiddenInput/ComboboxHiddenInput';\nimport { ComboboxOption, ComboboxOptionProps } from './ComboboxOption/ComboboxOption';\nimport { ComboboxOptions } from './ComboboxOptions/ComboboxOptions';\nimport { ComboboxSearch } from './ComboboxSearch/ComboboxSearch';\nimport { ComboboxTarget } from './ComboboxTarget/ComboboxTarget';\nimport { ComboboxStore, useCombobox } from './use-combobox/use-combobox';\nimport classes from './Combobox.module.css';\n\nexport type ComboboxStylesNames =\n  | 'options'\n  | 'dropdown'\n  | 'option'\n  | 'search'\n  | 'empty'\n  | 'footer'\n  | 'header'\n  | 'group'\n  | 'groupLabel';\n\nexport type ComboboxCSSVariables = {\n  options: '--combobox-option-fz' | '--combobox-option-padding';\n  dropdown: '--combobox-padding' | '--combobox-option-fz' | '--combobox-option-padding';\n};\n\nexport interface ComboboxProps extends __PopoverProps, StylesApiProps<ComboboxFactory> {\n  __staticSelector?: string;\n\n  /** Combobox content */\n  children?: React.ReactNode;\n\n  /** Combobox store, can be used to control combobox state */\n  store?: ComboboxStore;\n\n  /** Called when item is selected with `Enter` key or by clicking it */\n  onOptionSubmit?: (value: string, optionProps: ComboboxOptionProps) => void;\n\n  /** Controls items `font-size` and `padding`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Controls `padding` of the dropdown, `4` by default */\n  dropdownPadding?: React.CSSProperties['padding'];\n\n  /** Determines whether selection should be reset when option is hovered, `false` by default */\n  resetSelectionOnOptionHover?: boolean;\n\n  /** Determines whether Combobox value can be changed */\n  readOnly?: boolean;\n}\n\nexport type ComboboxFactory = Factory<{\n  props: ComboboxProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxStylesNames;\n  vars: ComboboxCSSVariables;\n  staticComponents: {\n    Target: typeof ComboboxTarget;\n    Dropdown: typeof ComboboxDropdown;\n    Options: typeof ComboboxOptions;\n    Option: typeof ComboboxOption;\n    Search: typeof ComboboxSearch;\n    Empty: typeof ComboboxEmpty;\n    Chevron: typeof ComboboxChevron;\n    Footer: typeof ComboboxFooter;\n    Header: typeof ComboboxHeader;\n    EventsTarget: typeof ComboboxEventsTarget;\n    DropdownTarget: typeof ComboboxDropdownTarget;\n    Group: typeof ComboboxGroup;\n    ClearButton: typeof ComboboxClearButton;\n    HiddenInput: typeof ComboboxHiddenInput;\n  };\n}>;\n\nconst defaultProps = {\n  keepMounted: true,\n  withinPortal: true,\n  resetSelectionOnOptionHover: false,\n  width: 'target',\n  transitionProps: { transition: 'fade', duration: 0 },\n  size: 'sm',\n} satisfies Partial<ComboboxProps>;\n\nconst varsResolver = createVarsResolver<ComboboxFactory>((_, { size, dropdownPadding }) => ({\n  options: {\n    '--combobox-option-fz': getFontSize(size),\n    '--combobox-option-padding': getSize(size, 'combobox-option-padding'),\n  },\n\n  dropdown: {\n    '--combobox-padding': dropdownPadding === undefined ? undefined : rem(dropdownPadding),\n    '--combobox-option-fz': getFontSize(size),\n    '--combobox-option-padding': getSize(size, 'combobox-option-padding'),\n  },\n}));\n\nexport function Combobox(_props: ComboboxProps) {\n  const props = useProps('Combobox', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    children,\n    store: controlledStore,\n    vars,\n    onOptionSubmit,\n    onClose,\n    size,\n    dropdownPadding,\n    resetSelectionOnOptionHover,\n    __staticSelector,\n    readOnly,\n    ...others\n  } = props;\n\n  const uncontrolledStore = useCombobox();\n  const store = controlledStore || uncontrolledStore;\n\n  const getStyles = useStyles<ComboboxFactory>({\n    name: __staticSelector || 'Combobox',\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const onDropdownClose = () => {\n    onClose?.();\n    store.closeDropdown();\n  };\n\n  return (\n    <ComboboxProvider\n      value={{\n        getStyles,\n        store,\n        onOptionSubmit,\n        size,\n        resetSelectionOnOptionHover,\n        readOnly,\n      }}\n    >\n      <Popover\n        opened={store.dropdownOpened}\n        preventPositionChangeWhenVisible\n        {...others}\n        onChange={(_opened) => !_opened && onDropdownClose()}\n        withRoles={false}\n        unstyled={unstyled}\n      >\n        {children}\n      </Popover>\n    </ComboboxProvider>\n  );\n}\n\nconst extendCombobox = (c: ExtendComponent<ComboboxFactory>): MantineThemeComponent => c;\n\nCombobox.extend = extendCombobox;\nCombobox.classes = classes;\nCombobox.displayName = '@mantine/core/Combobox';\nCombobox.Target = ComboboxTarget;\nCombobox.Dropdown = ComboboxDropdown;\nCombobox.Options = ComboboxOptions;\nCombobox.Option = ComboboxOption;\nCombobox.Search = ComboboxSearch;\nCombobox.Empty = ComboboxEmpty;\nCombobox.Chevron = ComboboxChevron;\nCombobox.Footer = ComboboxFooter;\nCombobox.Header = ComboboxHeader;\nCombobox.EventsTarget = ComboboxEventsTarget;\nCombobox.DropdownTarget = ComboboxDropdownTarget;\nCombobox.Group = ComboboxGroup;\nCombobox.ClearButton = ComboboxClearButton;\nCombobox.HiddenInput = ComboboxHiddenInput;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA,MAAMA,YAAe;EACnBC,WAAa;EACbC,YAAc;EACdC,2BAA6B;EAC7BC,KAAO;EACPC,eAAiB;IAAEC,UAAY;IAAQC,QAAA,EAAU;EAAE;EACnDC,IAAM;AACR;AAEA,MAAMC,YAAA,GAAeC,kBAAoC,EAACC,CAAA,EAAG;EAAEH,IAAA;EAAMI;AAAA,CAAuB;EAC1FC,OAAS;IACP,wBAAwBC,WAAA,CAAYN,IAAI;IACxC,6BAA6BO,OAAQ,CAAAP,IAAA,EAAM,yBAAyB;EACtE;EAEAQ,QAAU;IACR,oBAAsB,EAAAJ,eAAA,KAAoB,KAAY,aAAYK,GAAA,CAAIL,eAAe;IACrF,wBAAwBE,WAAA,CAAYN,IAAI;IACxC,6BAA6BO,OAAQ,CAAAP,IAAA,EAAM,yBAAyB;EAAA;AAExE,CAAE;AAEK,SAASU,SAASC,MAAuB;EAC9C,MAAMC,KAAQ,GAAAC,QAAA,CAAS,UAAY,EAAArB,YAAA,EAAcmB,MAAM;EACjD;IACJG,UAAA;IACAC,MAAA;IACAC,QAAA;IACAC,QAAA;IACAC,KAAO,EAAAC,eAAA;IACPC,IAAA;IACAC,cAAA;IACAC,OAAA;IACAtB,IAAA;IACAI,eAAA;IACAT,2BAAA;IACA4B,gBAAA;IACAC,QAAA;IACA,GAAGC;EAAA,CACD,GAAAb,KAAA;EAEJ,MAAMc,iBAAA,GAAoBC,WAAY;EACtC,MAAMT,KAAA,GAAQC,eAAmB,IAAAO,iBAAA;EAEjC,MAAME,SAAA,GAAYC,SAA2B;IAC3CC,IAAA,EAAMP,gBAAoB;IAC1BQ,OAAA;IACAnB,KAAA;IACAE,UAAA;IACAC,MAAA;IACAC,QAAA;IACAI,IAAA;IACAnB;EAAA,CACD;EAED,MAAM+B,eAAA,GAAkBA,CAAA,KAAM;IAClBV,OAAA;IACVJ,KAAA,CAAMe,aAAc;EACtB;EAGE,sBAAAC,GAAA,CAACC,gBAAA;IACCC,KAAO;MACLR,SAAA;MACAV,KAAA;MACAG,cAAA;MACArB,IAAA;MACAL,2BAAA;MACA6B;IACF;IAEAP,QAAA,iBAAAiB,GAAA,CAACG,OAAA;MACCC,MAAA,EAAQpB,KAAM,CAAAqB,cAAA;MACdC,gCAAgC;MAC/B,GAAGf,MAAA;MACJgB,QAAU,EAACC,OAAY,KAACA,OAAA,IAAWV,eAAgB;MACnDW,SAAW;MACX3B,QAAA;MAECC;IAAA;EACH,CACF;AAEJ;AAEA,MAAM2B,cAAA,GAAkBC,CAA+D,IAAAA,CAAA;AAEvFnC,QAAA,CAASoC,MAAS,GAAAF,cAAA;AAClBlC,QAAA,CAASqB,OAAU,GAAAA,OAAA;AACnBrB,QAAA,CAASqC,WAAc;AACvBrC,QAAA,CAASsC,MAAS,GAAAC,cAAA;AAClBvC,QAAA,CAASwC,QAAW,GAAAC,gBAAA;AACpBzC,QAAA,CAAS0C,OAAU,GAAAC,eAAA;AACnB3C,QAAA,CAAS4C,MAAS,GAAAC,cAAA;AAClB7C,QAAA,CAAS8C,MAAS,GAAAC,cAAA;AAClB/C,QAAA,CAASgD,KAAQ,GAAAC,aAAA;AACjBjD,QAAA,CAASkD,OAAU,GAAAC,eAAA;AACnBnD,QAAA,CAASoD,MAAS,GAAAC,cAAA;AAClBrD,QAAA,CAASsD,MAAS,GAAAC,cAAA;AAClBvD,QAAA,CAASwD,YAAe,GAAAC,oBAAA;AACxBzD,QAAA,CAAS0D,cAAiB,GAAAC,sBAAA;AAC1B3D,QAAA,CAAS4D,KAAQ,GAAAC,aAAA;AACjB7D,QAAA,CAAS8D,WAAc,GAAAC,mBAAA;AACvB/D,QAAA,CAASgE,WAAc,GAAAC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}