{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect } from 'react';\nimport { useFloating, autoUpdate, offset, hide, shift, limitShift, flip, inline, arrow, size } from '@floating-ui/react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport 'react/jsx-runtime';\nimport 'clsx';\nimport { useMantineEnv } from '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nfunction getDefaultMiddlewares(middlewares) {\n  if (middlewares === void 0) {\n    return {\n      shift: true,\n      flip: true\n    };\n  }\n  const result = {\n    ...middlewares\n  };\n  if (middlewares.shift === void 0) {\n    result.shift = true;\n  }\n  if (middlewares.flip === void 0) {\n    result.flip = true;\n  }\n  return result;\n}\nfunction getPopoverMiddlewares(options, getFloating, env) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares = [offset(options.offset), hide()];\n  if (options.dropdownVisible && env !== \"test\" && options.preventPositionChangeWhenVisible) {\n    middlewaresOptions.flip = false;\n    middlewaresOptions.shift = false;\n  }\n  if (middlewaresOptions.shift) {\n    middlewares.push(shift(typeof middlewaresOptions.shift === \"boolean\" ? {\n      limiter: limitShift(),\n      padding: 5\n    } : {\n      limiter: limitShift(),\n      padding: 5,\n      ...middlewaresOptions.shift\n    }));\n  }\n  if (middlewaresOptions.flip) {\n    middlewares.push(typeof middlewaresOptions.flip === \"boolean\" ? flip() : flip(middlewaresOptions.flip));\n  }\n  if (middlewaresOptions.inline) {\n    middlewares.push(typeof middlewaresOptions.inline === \"boolean\" ? inline() : inline(middlewaresOptions.inline));\n  }\n  middlewares.push(arrow({\n    element: options.arrowRef,\n    padding: options.arrowOffset\n  }));\n  if (middlewaresOptions.size || options.width === \"target\") {\n    middlewares.push(size({\n      ...(typeof middlewaresOptions.size === \"boolean\" ? {} : middlewaresOptions.size),\n      apply({\n        rects,\n        availableWidth,\n        availableHeight,\n        ...rest\n      }) {\n        const floating = getFloating();\n        const styles = floating.refs.floating.current?.style ?? {};\n        if (middlewaresOptions.size) {\n          if (typeof middlewaresOptions.size === \"object\" && !!middlewaresOptions.size.apply) {\n            middlewaresOptions.size.apply({\n              rects,\n              availableWidth,\n              availableHeight,\n              ...rest\n            });\n          } else {\n            Object.assign(styles, {\n              maxWidth: `${availableWidth}px`,\n              maxHeight: `${availableHeight}px`\n            });\n          }\n        }\n        if (options.width === \"target\") {\n          Object.assign(styles, {\n            width: `${rects.reference.width}px`\n          });\n        }\n      }\n    }));\n  }\n  return middlewares;\n}\nfunction usePopover(options) {\n  const env = useMantineEnv();\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange\n  });\n  const previouslyOpened = useRef(_opened);\n  const onClose = () => {\n    if (_opened && !options.disabled) {\n      setOpened(false);\n    }\n  };\n  const onToggle = () => {\n    if (!options.disabled) {\n      setOpened(!_opened);\n    }\n  };\n  const floating = useFloating({\n    strategy: options.strategy,\n    placement: options.preventPositionChangeWhenVisible ? options.positionRef.current : options.position,\n    middleware: getPopoverMiddlewares(options, () => floating, env),\n    // Only use whileElementsMounted when elements are conditionally rendered (not keepMounted)\n    // When keepMounted=true, elements are hidden with CSS and we need manual autoUpdate control\n    whileElementsMounted: options.keepMounted ? void 0 : autoUpdate\n  });\n  useEffect(() => {\n    if (!options.keepMounted || !floating.refs.reference.current || !floating.refs.floating.current) {\n      return;\n    }\n    if (_opened) {\n      return autoUpdate(floating.refs.reference.current, floating.refs.floating.current, floating.update);\n    }\n  }, [options.keepMounted, _opened, floating.refs.reference, floating.refs.floating, floating.update]);\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n    options.positionRef.current = floating.placement;\n  }, [floating.placement]);\n  useDidUpdate(() => {\n    if (_opened !== previouslyOpened.current) {\n      if (!_opened) {\n        options.onClose?.();\n      } else {\n        options.onOpen?.();\n      }\n    }\n    previouslyOpened.current = _opened;\n  }, [_opened, options.onClose, options.onOpen]);\n  useDidUpdate(() => {\n    let timeout = -1;\n    if (_opened) {\n      timeout = window.setTimeout(() => options.setDropdownVisible(true), 4);\n    }\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [_opened, options.position]);\n  return {\n    floating,\n    controlled: typeof options.opened === \"boolean\",\n    opened: _opened,\n    onClose,\n    onToggle\n  };\n}\nexport { usePopover };","map":{"version":3,"names":["getDefaultMiddlewares","middlewares","shift","flip","result","getPopoverMiddlewares","options","getFloating","env","middlewaresOptions","offset","hide","dropdownVisible","preventPositionChangeWhenVisible","push","limiter","limitShift","padding","inline","arrow","element","arrowRef","arrowOffset","size","width","apply","rects","availableWidth","availableHeight","rest","floating","styles","refs","current","style","Object","assign","maxWidth","maxHeight","reference","usePopover","useMantineEnv","_opened","setOpened","useUncontrolled","value","opened","defaultValue","defaultOpened","finalValue","onChange","previouslyOpened","useRef","onClose","disabled","onToggle","useFloating","strategy","placement","positionRef","position","middleware","whileElementsMounted","keepMounted","autoUpdate","useEffect","update","useDidUpdate","onPositionChange","onOpen","timeout","window","setTimeout","setDropdownVisible","clearTimeout","controlled"],"sources":["C:\\IVOSIS\\IvosisProjectManagement\\frontend\\node_modules\\@mantine\\core\\src\\components\\Popover\\use-popover.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport {\n  arrow,\n  autoUpdate,\n  flip,\n  hide,\n  inline,\n  limitShift,\n  Middleware,\n  offset,\n  shift,\n  size,\n  useFloating,\n  UseFloatingReturn,\n} from '@floating-ui/react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport { useMantineEnv } from '../../core';\nimport { FloatingAxesOffsets, FloatingPosition, FloatingStrategy } from '../Floating';\nimport { PopoverMiddlewares, PopoverWidth } from './Popover.types';\n\ninterface UsePopoverOptions {\n  offset: number | FloatingAxesOffsets;\n  position: FloatingPosition;\n  positionDependencies: any[] | undefined;\n  onPositionChange?: (position: FloatingPosition) => void;\n  opened: boolean | undefined;\n  defaultOpened: boolean | undefined;\n  onChange?: (opened: boolean) => void;\n  onClose?: () => void;\n  onDismiss?: () => void;\n  onOpen?: () => void;\n  width: PopoverWidth;\n  middlewares: PopoverMiddlewares | undefined;\n  arrowRef: React.RefObject<HTMLDivElement | null>;\n  arrowOffset: number;\n  strategy?: FloatingStrategy;\n  dropdownVisible: boolean;\n  setDropdownVisible: (visible: boolean) => void;\n  positionRef: React.RefObject<FloatingPosition>;\n  disabled: boolean | undefined;\n  preventPositionChangeWhenVisible: boolean | undefined;\n  keepMounted: boolean | undefined;\n}\n\nfunction getDefaultMiddlewares(middlewares: PopoverMiddlewares | undefined): PopoverMiddlewares {\n  if (middlewares === undefined) {\n    return { shift: true, flip: true };\n  }\n\n  const result = { ...middlewares };\n  if (middlewares.shift === undefined) {\n    result.shift = true;\n  }\n\n  if (middlewares.flip === undefined) {\n    result.flip = true;\n  }\n\n  return result;\n}\n\nfunction getPopoverMiddlewares(\n  options: UsePopoverOptions,\n  getFloating: () => UseFloatingReturn<Element>,\n  env: 'test' | 'default'\n) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares: Middleware[] = [offset(options.offset), hide()];\n\n  if (options.dropdownVisible && env !== 'test' && options.preventPositionChangeWhenVisible) {\n    middlewaresOptions.flip = false;\n    middlewaresOptions.shift = false;\n  }\n\n  if (middlewaresOptions.shift) {\n    middlewares.push(\n      shift(\n        typeof middlewaresOptions.shift === 'boolean'\n          ? { limiter: limitShift(), padding: 5 }\n          : { limiter: limitShift(), padding: 5, ...middlewaresOptions.shift }\n      )\n    );\n  }\n\n  if (middlewaresOptions.flip) {\n    middlewares.push(\n      typeof middlewaresOptions.flip === 'boolean' ? flip() : flip(middlewaresOptions.flip)\n    );\n  }\n\n  if (middlewaresOptions.inline) {\n    middlewares.push(\n      typeof middlewaresOptions.inline === 'boolean' ? inline() : inline(middlewaresOptions.inline)\n    );\n  }\n\n  middlewares.push(arrow({ element: options.arrowRef, padding: options.arrowOffset }));\n\n  if (middlewaresOptions.size || options.width === 'target') {\n    middlewares.push(\n      size({\n        ...(typeof middlewaresOptions.size === 'boolean' ? {} : middlewaresOptions.size),\n        apply({ rects, availableWidth, availableHeight, ...rest }) {\n          const floating = getFloating();\n          const styles = floating.refs.floating.current?.style ?? {};\n\n          if (middlewaresOptions.size) {\n            //If custom apply function is given use that else set defaults\n            if (typeof middlewaresOptions.size === 'object' && !!middlewaresOptions.size.apply) {\n              middlewaresOptions.size.apply({ rects, availableWidth, availableHeight, ...rest });\n            } else {\n              Object.assign(styles, {\n                maxWidth: `${availableWidth}px`,\n                maxHeight: `${availableHeight}px`,\n              });\n            }\n          }\n\n          if (options.width === 'target') {\n            Object.assign(styles, {\n              width: `${rects.reference.width}px`,\n            });\n          }\n        },\n      })\n    );\n  }\n\n  return middlewares;\n}\n\nexport function usePopover(options: UsePopoverOptions) {\n  const env = useMantineEnv();\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange,\n  });\n\n  const previouslyOpened = useRef(_opened);\n\n  const onClose = () => {\n    if (_opened && !options.disabled) {\n      setOpened(false);\n    }\n  };\n\n  const onToggle = () => {\n    if (!options.disabled) {\n      setOpened(!_opened);\n    }\n  };\n\n  const floating: UseFloatingReturn<Element> = useFloating({\n    strategy: options.strategy,\n    placement: options.preventPositionChangeWhenVisible\n      ? options.positionRef.current\n      : options.position,\n    middleware: getPopoverMiddlewares(options, () => floating, env),\n    // Only use whileElementsMounted when elements are conditionally rendered (not keepMounted)\n    // When keepMounted=true, elements are hidden with CSS and we need manual autoUpdate control\n    whileElementsMounted: options.keepMounted ? undefined : autoUpdate,\n  });\n\n  // Manual autoUpdate control for keepMounted scenario\n  // This follows Floating UI's recommendation for CSS-hidden elements\n  useEffect(() => {\n    if (\n      !options.keepMounted ||\n      !floating.refs.reference.current ||\n      !floating.refs.floating.current\n    ) {\n      return;\n    }\n\n    // Only run autoUpdate when the popover is actually opened\n    if (_opened) {\n      return autoUpdate(\n        floating.refs.reference.current,\n        floating.refs.floating.current,\n        floating.update\n      );\n    }\n  }, [\n    options.keepMounted,\n    _opened,\n    floating.refs.reference,\n    floating.refs.floating,\n    floating.update,\n  ]);\n\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n    options.positionRef.current = floating.placement;\n  }, [floating.placement]);\n\n  useDidUpdate(() => {\n    if (_opened !== previouslyOpened.current) {\n      if (!_opened) {\n        options.onClose?.();\n      } else {\n        options.onOpen?.();\n      }\n    }\n\n    previouslyOpened.current = _opened;\n  }, [_opened, options.onClose, options.onOpen]);\n\n  useDidUpdate(() => {\n    let timeout: number = -1;\n\n    if (_opened) {\n      // Required to be in timeout to give floating ui render time to flip/shift popover\n      timeout = window.setTimeout(() => options.setDropdownVisible(true), 4);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [_opened, options.position]);\n\n  return {\n    floating,\n    controlled: typeof options.opened === 'boolean',\n    opened: _opened,\n    onClose,\n    onToggle,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}