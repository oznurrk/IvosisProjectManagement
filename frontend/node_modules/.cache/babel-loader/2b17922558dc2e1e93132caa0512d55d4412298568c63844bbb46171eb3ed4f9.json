{"ast":null,"code":"'use client';\n\nimport { useState, useCallback } from 'react';\nimport { clamp } from '../utils/clamp/clamp.mjs';\nconst DEFAULT_OPTIONS = {\n  min: -Infinity,\n  max: Infinity\n};\nfunction useCounter(initialValue = 0, options) {\n  const {\n    min,\n    max\n  } = {\n    ...DEFAULT_OPTIONS,\n    ...options\n  };\n  const [count, setCount] = useState(clamp(initialValue, min, max));\n  const increment = useCallback(() => setCount(current => clamp(current + 1, min, max)), [min, max]);\n  const decrement = useCallback(() => setCount(current => clamp(current - 1, min, max)), [min, max]);\n  const set = useCallback(value => setCount(clamp(value, min, max)), [min, max]);\n  const reset = useCallback(() => setCount(clamp(initialValue, min, max)), [initialValue, min, max]);\n  return [count, {\n    increment,\n    decrement,\n    set,\n    reset\n  }];\n}\nexport { useCounter };","map":{"version":3,"names":["DEFAULT_OPTIONS","min","Infinity","max","useCounter","initialValue","options","count","setCount","useState","clamp","increment","useCallback","current","decrement","set","value","reset"],"sources":["C:\\Users\\Asus\\Desktop\\Ivosis\\IvosisProjectManagement\\frontend\\node_modules\\@mantine\\hooks\\src\\use-counter\\use-counter.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { clamp } from '../utils';\n\nconst DEFAULT_OPTIONS = {\n  min: -Infinity,\n  max: Infinity,\n};\n\nexport interface UseCounterOptions {\n  min?: number;\n  max?: number;\n}\n\nexport interface UseCounterHandlers {\n  increment: () => void;\n  decrement: () => void;\n  set: (value: number) => void;\n  reset: () => void;\n}\n\nexport type UseCounterReturnValue = [number, UseCounterHandlers];\n\nexport function useCounter(\n  initialValue = 0,\n  options?: UseCounterOptions\n): [number, UseCounterHandlers] {\n  const { min, max } = { ...DEFAULT_OPTIONS, ...options };\n  const [count, setCount] = useState<number>(clamp(initialValue, min, max));\n\n  const increment = useCallback(\n    () => setCount((current) => clamp(current + 1, min, max)),\n    [min, max]\n  );\n\n  const decrement = useCallback(\n    () => setCount((current) => clamp(current - 1, min, max)),\n    [min, max]\n  );\n\n  const set = useCallback((value: number) => setCount(clamp(value, min, max)), [min, max]);\n\n  const reset = useCallback(\n    () => setCount(clamp(initialValue, min, max)),\n    [initialValue, min, max]\n  );\n\n  return [count, { increment, decrement, set, reset }];\n}\n"],"mappings":";;;;AAGA,MAAMA,eAAkB;EACtBC,GAAK,GAAAC,QAAA;EACLC,GAAK,EAAAD;AACP;AAgBgB,SAAAE,WACdC,YAAe,MACfC,OAC8B;EACxB;IAAEL,GAAA;IAAKE;EAAI,IAAI;IAAE,GAAGH,eAAA;IAAiB,GAAGM;EAAQ;EAChD,OAACC,KAAA,EAAOC,QAAQ,IAAIC,QAAA,CAAiBC,KAAM,CAAAL,YAAA,EAAcJ,GAAK,EAAAE,GAAG,CAAC;EAExE,MAAMQ,SAAY,GAAAC,WAAA,CAChB,MAAMJ,QAAA,CAAUK,OAAA,IAAYH,KAAA,CAAMG,OAAU,MAAGZ,GAAK,EAAAE,GAAG,CAAC,GACxD,CAACF,GAAA,EAAKE,GAAG,CACX;EAEA,MAAMW,SAAY,GAAAF,WAAA,CAChB,MAAMJ,QAAA,CAAUK,OAAA,IAAYH,KAAA,CAAMG,OAAU,MAAGZ,GAAK,EAAAE,GAAG,CAAC,GACxD,CAACF,GAAA,EAAKE,GAAG,CACX;EAEA,MAAMY,GAAM,GAAAH,WAAA,CAAaI,KAAA,IAAkBR,QAAA,CAASE,KAAM,CAAAM,KAAA,EAAOf,GAAK,EAAAE,GAAG,CAAC,GAAG,CAACF,GAAA,EAAKE,GAAG,CAAC;EAEvF,MAAMc,KAAQ,GAAAL,WAAA,CACZ,MAAMJ,QAAS,CAAAE,KAAA,CAAML,YAAc,EAAAJ,GAAA,EAAKE,GAAG,CAAC,GAC5C,CAACE,YAAc,EAAAJ,GAAA,EAAKE,GAAG,CACzB;EAEA,OAAO,CAACI,KAAO;IAAEI,SAAA;IAAWG,SAAW;IAAAC,GAAA;IAAKE;EAAA,CAAO;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}